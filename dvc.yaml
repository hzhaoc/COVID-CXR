stages:
  source code:
    cmd: python src/hashdir.py src > .hash/src.hash
    outs:
    - .hash/src.hash:
        cache: false
    always_changed: true
  data:
    cmd: python src/hashdir.py ./data/source > .hash/data.hash
    outs:
    - .hash/data.hash:
        cache: false
    always_changed: true
  meta:
    cmd: python src/run_script.py "src/main/100 Image Meta.ipynb" 300 && python src/hashdir.py
      .pkls/meta > .hash/meta.hash
    deps:
    - .hash/data.hash
    - .hash/src.hash
    - src/main/100 Image Meta.ipynb
    params:
    - etl.CLAHE_clip_limit
    - etl.CLAHE_tile_size
    - etl.crop_top
    - etl.image_size
    - etl.split_rand
    - etl.train_size
    - etl.use_CLAHE
    - etl.use_segmentation
    - etl.use_spark
    outs:
    - .hash/meta.hash:
        cache: false
    - 100 Image Meta.html:
        cache: false
  feature and label:
    cmd: python src/run_script.py "src/main/110 Image Data.ipynb" 2200 && python src/hashdir.py
      ./data/feature > .hash/feature.hash
    deps:
    - .hash/meta.hash
    - src/main/110 Image Data.ipynb
    params:
    - etl.CLAHE_clip_limit
    - etl.CLAHE_tile_size
    - etl.crop_top
    - etl.image_size
    - etl.use_CLAHE
    - etl.use_segmentation
    outs:
    - .hash/feature.hash:
        cache: false
    - 110 Image Data.html:
        cache: false
    - data/feature:
        cache: false
  visualize image transform:
    cmd: python src/run_script.py "src/main/160 Plot Transform.ipynb" 300
    deps:
    - .hash/feature.hash
    - src/main/160 Plot Transform.ipynb
    params:
    - etl.CLAHE_clip_limit
    - etl.CLAHE_tile_size
    - etl.crop_top
    - etl.image_size
    - etl.use_CLAHE
    - etl.use_segmentation
    - visual.transform
    outs:
    - ./diagnosis/transform/:
        cache: false
    - 160 Plot Transform.html:
        cache: false
  model:
    cmd: python src/hashdir.py model > .hash/model.hash
    outs:
    - .hash/model.hash:
        cache: false
    always_changed: true
  train and evaluate:
    cmd: python -u -m "src.main.200 Train" >> train.log.txt && python src/hashdir.py
      model > .hash/train.hash
    deps:
    - .hash/feature.hash
    - .hash/model.hash
    - src/main/200 Train.py
    params:
    - etl.image_size
    - model
    - train
    outs:
    - .hash/train.hash:
        cache: false
  visualize model feature:
    cmd: python src/run_script.py "src/main/210 Plot Feature.ipynb" 300
    deps:
    - .hash/train.hash
    - src/main/210 Plot Feature.ipynb
    params:
    - etl.image_size
    - model.architect
    - model.name
    - model.tool
    - model.torch.in_channel
    - visual.feature.example_num
    - visual.feature.img_size_inch
    outs:
    - 210 Plot Feature.html:
        cache: false
    - diagnosis/feature:
        cache: false
